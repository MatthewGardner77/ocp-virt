- name: Get vSphere login session
  ansible.builtin.uri:
    url: "https://{{ vcenter_hostname }}/rest/com/vmware/cis/session"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    force_basic_auth: true
    url_username: "{{ vcenter_username }}"
    url_password: "{{ vcenter_password }}"
  register: login_response

- name: Get list of datastores
  ansible.builtin.uri:
    url: "https://{{ vcenter_hostname }}/rest/vcenter/datastore"
    method: GET
    headers:
      Content-Type: "application/json"
      vmware-api-session-id: "{{ login_response.json.value }}"
  register: datastore_response

- name: datastores
  ansible.builtin.debug:
    var: datastore_response

- name: collect a list of the datacenters
  vmware.vmware_rest.vcenter_datacenter_info:
    vcenter_hostname: "{{ vcenter_hostname }}"
    vcenter_password: "{{ vcenter_password }}"
    vcenter_username: "{{ vcenter_username }}"
  register: my_datacenters

- name: my datacenters
  ansible.builtin.debug:
    var: datacenters

- name: Deploy Virt Plan
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: Plan
      metadata:
        name: "{{ plan_name }}"
        namespace: openshift-mtv
      spec:
        archived: false
        description: ''
        map:
          network:
            name: "test-network"
            namespace: openshift-mtv
          storage:
            name: "test-storage"
            namespace: openshift-mtv
        provider:
          destination:
            name: host
            namespace: openshift-mtv
          source:
            name: vmware
            namespace: openshift-mtv
        targetNamespace: openshift-mtv
        vms:
          - hooks: []
            id: vm-1508016
          - hooks: []
            id: vm-1508020
        warm: false
